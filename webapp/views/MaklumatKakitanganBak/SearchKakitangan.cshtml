@using eSPP.Models.RoleManagement
@model  eSPP.Models.MaklumatKakitanganModels
@{
    //pass role dari ViewBag
    RoleManager manager = (RoleManager)ViewBag.RoleManager;
}

<div class="col col-lg-8 col-md-10 col-sm-12 col-xs-12 col-lg-offset-2 col-md-offset-1">
    <div class="well">
        @using (Html.BeginForm("Index", "MaklumatKakitanganBak", FormMethod.Get))
        {
            <div class="row">
                <div class="col smart-form col-lg-4 col-md-4 col-sm-4 col-xs-12">
                    @CustomSelect(manager, "key")
                </div>
                <div class="col smart-form col-lg-6 col-md-6 col-sm-6 col-xs-12">
                    @CustomInput(manager, "value", "Data")
                </div>
                <div class="col col-lg-2 col-md-2 col-sm-2 col-xs-12">
                    @CustomButton(manager, "search", "Cari", EditLevel.Edit)
                </div>               
            </div>
        }
    </div>
</div>
<br />

<!-- Helper -->
@helper CustomSelect(RoleManager rl, string propertyName)
{
    HtmlRole role = rl.GetHtmlRole(propertyName, ModuleConstant.MaklumatKakiTangan);
    if (role.ViewLevel == ViewLevel.View)
    {
        <div class="select">
            <select name="@propertyName" id="@propertyName" class="form-control" disabled>
                <option selected disabled="disabled">Jenis</option>
                <option value="1">No. Pekerja</option>
                <option value="2">Nama Pekerja</option>
                <option value="3">No. KP(Baru)</option>
            </select>
            <i></i>
        </div>
    }
    else if (role.ViewLevel == ViewLevel.Edit)
    {
        <div class="select">
            <select name="@propertyName" id="@propertyName" class="form-control">
                <option selected disabled="disabled">Jenis</option>
                <option value="1">No. Pekerja</option>
                <option value="2">Nama Pekerja</option>
                <option value="3">No. KP(Baru)</option>
            </select>
            <i></i>
        </div>
    }
    else
    {
        //cannot see anything
    }
}

@helper CustomInput(RoleManager rl, string propertyName, string placeHolder = "")
{
    HtmlRole role = rl.GetHtmlRole(propertyName, ModuleConstant.MaklumatKakiTangan);
    if (placeHolder == "")
    {
        placeHolder = " ";
    }

    if (role.ViewLevel == ViewLevel.View)
    {
        <div class="input">
            <input type="text" name="@propertyName" id="@propertyName" class="form-control" disabled />
        </div>
    }
    else if (role.ViewLevel == ViewLevel.Edit)
    {
        <div class="input">
            <input type="text" name="@propertyName" id="@propertyName" class="form-control" placeholder="@placeHolder" />
        </div>
    }
    else
    {
        //cannot see anything
    }
}

@helper CustomButton(RoleManager rl, string propertyName, string buttonLabel, EditLevel buttonType)
{
    HtmlRole role = rl.GetHtmlRole(propertyName, ModuleConstant.MaklumatKakiTangan);

    if (role.EditLevels.Contains(buttonType))
    {
        <div class="button">
            <button class="btn btn-default btn-primary" name="@propertyName" type="submit">
                <i class="fa fa-search"></i>@buttonLabel
            </button>
        </div>
    }
    else
    {
        //cannot see anything
    }
}